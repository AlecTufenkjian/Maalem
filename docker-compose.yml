version: "3.7"

services:
  nginx:
    container_name: nginx
    image: nginx:1.15-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    restart: unless-stopped

  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - "nginx"
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: unless-stopped

  api:
    container_name: api
    build: ./api
    command: npm start
    volumes:
      - ./api:/app
    ports:
      - 9000:9000
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - api-network

  reactapp:
    container_name: reactapp
    build: ./app
    command: npm start
    volumes:
      - ./app:/app
    ports:
      - 3000:3000
    depends_on:
      - "api"
    restart: unless-stopped

  mongodb:
    image: mongo
    container_name: mongodb
    volumes:
      - './mongodb/database:/data/db'
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: v3JG2@wNeht9
      MONGO_INITDB_DATABASE: app
    restart: unless-stopped
    networks:
      - api-network

networks:
  api-network:
    driver: bridge
